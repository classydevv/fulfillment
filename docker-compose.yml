x-db-environment: &x-db-environment
  POSTGRES_SSL_MODE: "disable"
  POSTGRES_HOST: "db"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "providers"
  POSTGRES_PASSWORD: "GY34G6TH@!3fghF45"
  POSTGRES_USER: "user"

x-pgadmin-environment: &x-pgadmin-environment
  PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
  PGADMIN_DEFAULT_PASSWORD: admin
  PGADMIN_CONFIG_SERVER_MODE: 'False'
  PGADMIN_PORT: "5050"

x-providers-app-environment: &x-providers-app-environment
  # HTTP
  HTTP_PORT: "8080"
  # GRPC
  GRPC_PORT: "8082"
  # Logger
  LOG_LEVEL: "debug"
  # PG
  PG_URL: "postgres://user:GY34G6TH@!3fghF45@db:5432/providers"


services:
  providers:
    container_name: providers
    build: 
      context: .
      dockerfile: ./build/package/providers/Dockerfile
    command: /main
    environment:
      <<: *x-providers-app-environment
    ports:
      - "${HTTP_PORT:-8080}:${HTTP_PORT:-8080}"
      - "${GRPC_PORT:-8082}:${GRPC_PORT:-8082}"
    depends_on:
      - db
    networks:
      app_network:
    restart: unless-stopped

  db:
    container_name: db
    image: postgres:17-alpine
    environment:
      <<: *x-db-environment
    volumes:
      - providers_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    networks:
      app_network:
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      <<: *x-pgadmin-environment
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - db
    networks:
      app_network:
    restart: unless-stopped


networks:
  app_network:
    external: false


volumes:
  providers_data:
  pgadmin: